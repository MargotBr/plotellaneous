---
title: "Central Park Squirrels | Tidy Tuesday | 2023-05-23"
format: html
editor: visual
---

```{r}
library(tidytuesdayR)
library(stringr)
library(dplyr)
library(osmdata)
library(sf)
library(ggplot2)
library(png)
library(showtext)
library(grid)
library(magick)
```

## Data import

```{r}
#| message: false
#| warning: false
squirrels_data <- tt_load("2023-05-23")$squirrel_data

colnames(squirrels_data) <- colnames(squirrels_data) %>% 
  str_to_lower() %>% 
  str_replace_all(pattern = " ", replacement = "_")
```

## Data viz

### Create a map of Central Park, NYC City

Use the `{osmdata}` to extract and use data from OpenStreetMap (OSM).

Two features are considered here:

- water: basins and lakes in Central Park
- highway: paths, footways, cycleways, etc.

Available possibilities for a given feature can be found with `available_tags()` (e.g. `available_tags("water")`)

```{r}
central_park_boundary <- c(
  left = min(squirrels_data$x) - 0.001,
  bottom = min(squirrels_data$y) - 0.001,
  right = max(squirrels_data$x) + 0.001,
  top = max(squirrels_data$y) + 0.001
)

spatial_info_water <- opq(
    bbox = central_park_boundary
  ) %>%
  add_osm_feature(key = "water",
                  value = c("reservoir", "pond", "basin")) %>%
  osmdata_sf()

spatial_info_paths <- opq(
    bbox = central_park_boundary
  ) %>%
  add_osm_feature(key = "highway",
                  value = c(
                    "primary", "secondary", "tertiary",
                    "path", "footway", "cycleway")) %>%
  osmdata_sf()
```

Plot this spatial info with `{sf}` and `{ggplot2}`:

```{r}
map_central_park_plot <- ggplot() + 
  geom_sf(
    data = spatial_info_paths$osm_lines,
    inherit.aes = FALSE,
    alpha = 0.1,
    size = 0.1
  ) +
  theme(
    panel.background = element_rect(fill = "white", color = NA),
    plot.background = element_rect(fill = "white", color = NA),
    panel.grid = element_blank(), 
    axis.title = element_blank(), 
    axis.text = element_blank(), 
    axis.ticks = element_blank()
  )

ggsave(
 filename = file.path(here::here(), "tidytuesday-2023-05-23/interplots/map_central_park_plot_line.png"),
 plot = map_central_park_plot,
 width = 210,
 height = 210,
 units = "mm"
)

map_central_park_plot <- map_central_park_plot +
  geom_sf(
    data = spatial_info_water$osm_polygons,
    inherit.aes = FALSE,
    fill = rgb(87, 127, 146, max = 255),
    color = NA
  )
  
ggsave(
 filename = file.path(here::here(), "tidytuesday-2023-05-23/interplots/map_central_park_plot_polygon.png"),
 plot = map_central_park_plot,
 width = 210,
 height = 210,
 units = "mm"
)

map_central_park_plot
```

### Add the location of squirrels in Central Park, NYC

Use the `X` and `Y`coordinates in the squirrels dataset.

```{r}
map_squirrels_plot <- map_central_park_plot +
  geom_point(
    data = squirrels_data,
    mapping = aes(
    x = x, 
    y = y),
    size = 1,
    alpha = 0.2,
    color = rgb(194, 142, 100, max = 255)
  )

map_squirrels_plot

ggsave(
 filename = file.path(here::here(), "tidytuesday-2023-05-23/interplots/map_squirrels_plot.png"),
 plot = map_squirrels_plot,
 width = 210,
 height = 210,
 units = "mm"
)
```

### Add the image of a squirrel and the statue of liberty

These images were extracted from Freepik, and combined.

The image is added to the plot with `annotation_raster()`.

```{r}
img_squirrel_statue <- readPNG(
  file.path(here::here(), "tidytuesday-2023-05-23/img/squirrel_statue_liberty2.png")
  ) %>% 
  as.raster()

map_squirrels_image_plot <- map_squirrels_plot +
  annotation_raster(
    img_squirrel_statue, 
    xmin = central_park_boundary[["right"]] - 0.01, 
    xmax = central_park_boundary[["right"]] + 0.01,
    ymin = central_park_boundary[["bottom"]] - 0.01, 
    ymax = central_park_boundary[["top"]] - 0.025) 

map_squirrels_image_plot

ggsave(
 filename = file.path(here::here(), "tidytuesday-2023-05-23/interplots/map_squirrels_image_plot.png"),
 plot = map_squirrels_image_plot,
 width = 210,
 height = 210,
 units = "mm"
)
```

### Add a title and a caption with an original font

Use the `{showtext}` package to register a font from Google font.

```{r}
font_add_google(
  name = "Syne Mono", 
  family = "Syne Mono"
)
showtext_auto()
```

Add it to the plot (title, subtitle, caption):

```{r}
map_squirrels_image_plot_title <- map_squirrels_image_plot +
  labs(
    title = "Oh, look! Look! A squirrel!",
    subtitle = "Location of squirrels in Central Park, NYC",
    caption = "Data: 2018 Central Park Squirrel Census | Graphic: MargotBr\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright"
  ) +
  theme(
    plot.title = element_text(
      hjust = 0.5,
      family = "Syne Mono",
      size = 30
    ),
    plot.subtitle = element_text(
      hjust = 0.5,
      family = "Syne Mono",
      size = 15,
      margin = margin(
        t = 0,
        r = 0,
        b = -30,
        l = 0
      )
    ),
    plot.caption = element_text(
      hjust = 1,
      family = "Syne Mono", 
      size = 10, 
      lineheight = 0.5,
      margin = margin(
        t = 20,
        r = 0,
        b = 0,
        l = 0
      )
      ))

map_squirrels_image_plot_title

map_squirrels_image_plot_size_font <- map_squirrels_image_plot_title + 
  theme(
    plot.title = element_text(
      size = 100
    ), 
    plot.subtitle = element_text(
      size = 60
    ), 
    plot.caption = element_text(
      size = 20
    )
  )

ggsave(
  filename = file.path(
    here::here(),
    "tidytuesday-2023-05-23/interplots/map_squirrels_image_plot_title.png"
  ),
  plot = map_squirrels_image_plot_size_font,
  width = 210,
  height = 210,
  units = "mm"
)
```

### Add a paper in the background

```{r}
img_paper <- readPNG(
  file.path(here::here(), "tidytuesday-2023-05-23/img/paper.png"),
  native = TRUE
)

map_squirrels_image_plot_no_back <- map_squirrels_image_plot_title +
  theme(
    panel.background = element_rect(fill = NA, color = NA),
    plot.background = element_rect(fill = NA, color = NA)
  )

map_squirrels_image_plot_no_back

grid.draw(gList(
  rasterGrob(
    img_paper,
    width = unit(1, "npc"),
    height = unit(1, "npc")
  ),
  ggplotGrob(map_squirrels_image_plot_no_back)
))
```

```{r}
#| echo: false
#| warning: false
#| message: false
#| include: false

# Save the plot
map_squirrels_image_plot_no_back <- map_squirrels_image_plot_size_font + 
  theme(
    panel.background = element_rect(fill = NA, color = NA),
    plot.background = element_rect(fill = NA, color = NA),
    plot.title = element_text(
      size = 100
    ), 
    plot.subtitle = element_text(
      size = 60
    ), 
    plot.caption = element_text(
      size = 20
    )
  )

png(
  filename = file.path(here::here(), "plots/margotbr_squirrels_nyc.png"),
  width = 210, 
  height = 210, 
  units = "mm",
  res = 400
)

map_squirrels_image_plot_no_back

grid.draw(gList(
  rasterGrob(
    img_paper,
    width = unit(1, "npc"),
    height = unit(1, "npc")
  ),
  ggplotGrob(map_squirrels_image_plot_no_back)
))

dev.off()
```

